##  Opis
PyChan to lokalny komunikator napisany w **Pythonie**, korzystajÄ…cy z **Tkinter** do interfejsu uÅ¼ytkownika oraz **sockets** do komunikacji klient-serwer. UmoÅ¼liwia wysyÅ‚anie wiadomoÅ›ci, zarzÄ…dzanie kanaÅ‚ami i dostÄ™p do historii czatÃ³w.

## ğŸ”§ Instalacja
Aby uruchomiÄ‡ PyChan, upewnij siÄ™, Å¼e masz zainstalowanego Pythona (3.11+) i wymagane biblioteki:

```bash
pip install -r requirements.txt
```

## ğŸš€ Uruchamianie

### Serwer:
Uruchom serwer, ktÃ³ry nasÅ‚uchuje na porcie **12345** i obsÅ‚uguje klientÃ³w:

```bash
python server.py
```

### Klient:
Uruchom aplikacjÄ™ klienta i podÅ‚Ä…cz siÄ™ do serwera:

```bash
python client.py
```

## ğŸ›  Architektura
- **Serwer**: ObsÅ‚uguje poÅ‚Ä…czenia klientÃ³w, autoryzuje uÅ¼ytkownikÃ³w i zarzÄ…dza komunikacjÄ…. Wszystkie dane uÅ¼ytkownikÃ³w sÄ… **szyfrowane za pomocÄ… bcrypt**.
- **Klient**: Graficzny interfejs uÅ¼ytkownika oparty na **Tkinter**, ktÃ³ry umoÅ¼liwia wysyÅ‚anie i odbieranie wiadomoÅ›ci.

## âœ… BezpieczeÅ„stwo
- Wszystkie dane uÅ¼ytkownikÃ³w i hasÅ‚a sÄ… **szyfrowane za pomocÄ… bcrypt** po stronie serwera.
- Komunikacja sieciowa odbywa siÄ™ przez **sockety**, moÅ¼liwe do rozszerzenia o **SSL/TLS** dla dodatkowego zabezpieczenia.
- MoÅ¼liwoÅ›Ä‡ implementacji dodatkowych zabezpieczeÅ„, np. autoryzacja dwuskÅ‚adnikowa.

```bash
pytest
```
